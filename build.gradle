plugins {
  id "java"
  id "io.freefair.aspectj.post-compile-weaving" version "5.3.0"
}

repositories {
  mavenCentral()
}

def javaVersion = "11"
def aspectjVersion = "1.9.7"
def junitVersion = "5.7.2"
def log4jVersion = "2.17.0"
def mockitoVersion = "3.12.4"

def aspects = new ArrayList();
fileTree("src/main/aspectj/xyz/haff/aspektoj/aspects").each {
  aspects.add(it.toString())
}

compileJava   {
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  ajc {
      enabled = true 
      options {
          compilerArgs = aspects
      }
  }
}

compileTestJava {
  ajc {
    enabled = true
    options {
      compilerArgs = aspects
    }
  }
}

aspectj {
  version = aspectjVersion
}

dependencies {
  implementation "org.aspectj:aspectjrt:1.9.7"
  implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
  implementation "org.aspectj:aspectjtools:${aspectjVersion}"
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  implementation "com.google.guava:guava:30.1.1-jre"
  testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testImplementation "org.mockito:mockito-junit-jupiter:2.23.0"
  testImplementation "org.mockito:mockito-core:${mockitoVersion}"
  testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
}

test {
  testLogging {
    afterSuite { desc, result ->
      if (!desc.parent) {
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
  useJUnitPlatform()
}

